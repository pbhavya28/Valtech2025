
----------------------------------------------------------
EmployeeServelet 3-2-25 4:28 PM
----------------------------------------------------------

package servlets;

import java.io.IOException;

import dao.Employee;
import dao.EmployeeDAO;
import dao.EmployeeDAOImpl;
import dao.Employee.Gender;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletConfig;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet(urlPatterns = "/employees")
public class EmployeesServlet extends HttpServlet {

	private EmployeeDAO dao;
	
	@Override
	public void init(ServletConfig config) throws ServletException {
		dao = new EmployeeDAOImpl();		
	}
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String operation = req.getParameter("operation");
		if("Cancel".equals(operation)) {
			req.setAttribute("emps", dao.getAll());
			req.getRequestDispatcher("employees.jsp").forward(req, resp);
			return;
		}
			Employee emp = Employee.builder().id(Integer.parseInt(req.getParameter("id"))).
					name(req.getParameter("name"))
					.age(Integer.parseInt(req.getParameter("age")))
					.gender(Gender.valueOf(req.getParameter("gender").toUpperCase()))
					.salary(Integer.parseInt(req.getParameter("salary")))
					.experience(Integer.parseInt(req.getParameter("experience")))
					.level(Integer.parseInt(req.getParameter("level"))).build();
		if("Save".equals(operation)) {
			dao.save(emp);
			req.setAttribute("emps", dao.getAll());
			req.getRequestDispatcher("employees.jsp").forward(req, resp);
			
			return;
		}
		if("Update".equals(operation)) {
		dao.update(emp);
		req.setAttribute("emps", dao.getAll());
		req.getRequestDispatcher("employees.jsp").forward(req, resp);
		return;
		}
		
	}
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		
		//-------------------------------------------------
        String sortOrder = req.getParameter("sortOrder");
        if (sortOrder == null) {
            sortOrder = "ascending";
        }
        if ("descending".equals(sortOrder)) {
    		req.setAttribute("emps", dao.sortByIdDesc());
////        	dao.sortByIdDesc();
        } else {
    		req.setAttribute("emps", dao.sortByIdAsc());

////        	dao.sortByIdAsc();
        }

        req.setAttribute("sortOrder", sortOrder); // Pass current sort order to the JSP

         req.getRequestDispatcher("employees.jsp").forward(req, resp);
//       
		//-------------------------------------------------
		String operation = req.getParameter("operation");
		if("Update".equals(operation)) {
			
			int id = Integer.parseInt(req.getParameter("id"));
			Employee e = dao.get(id);
			req.setAttribute("readonly","readonly");
			req.setAttribute("emp", e);
			req.setAttribute("mode", "Update");
			req.getRequestDispatcher("editEmployee.jsp").forward(req, resp);
			return;
		}
		if("new".equals(operation)) {
			req.setAttribute("mode", "Save");
			req.getRequestDispatcher("editEmployee.jsp").forward(req, resp);
			return;
		}
		if("Delete".equals(operation)) {
			int id = Integer.parseInt(req.getParameter("id"));
			dao.delete(id);
			req.setAttribute("emps", dao.getAll());
			req.getRequestDispatcher("employees.jsp").forward(req, resp);
			return;
		}
		System.out.println("DAO = "+dao.getAll().size());
		req.setAttribute("emps", dao.getAll());
		req.getRequestDispatcher("employees.jsp").forward(req, resp);
	}
}
*******************************************************************